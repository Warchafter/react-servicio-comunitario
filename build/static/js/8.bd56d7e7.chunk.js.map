{"version":3,"sources":["components/Notifier/Notifier.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","components/Posts/PostDetail/PostDetail.jsx"],"names":["Notifier","dispatch","useDispatch","notifications","useSelector","store","snackbar","onRemoveSnackbar","useCallback","key","actions","useState","displayed","setDisplayed","useSnackbar","enqueueSnackbar","closeSnackbar","storeDisplayed","id","concat","removeDisplayed","filter","React","useEffect","forEach","message","options","dismissed","includes","onClose","event","reason","myKey","onExited","Skeleton","props","ref","_props$animation","animation","classes","className","_props$component","component","Component","height","_props$variant","variant","width","other","_objectWithoutProperties","hasChildren","Boolean","children","_extends","clsx","root","withChildren","fitContent","heightAuto","style","withStyles","theme","display","backgroundColor","fade","palette","text","primary","type","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","position","overflow","background","action","hover","bottom","left","right","top","visibility","maxWidth","name","useStyles","makeStyles","flexGrow","postsContainer","paddingTop","spacing","postTitle","fontWeight","paddingBottom","card","media","cardActions","margin","justifyContent","author","paginationContainer","paper","padding","textAlign","color","secondary","resize","fontSize","Post","postId","match","params","onFetchPostDetails","postData","state","postDetails","loading","console","log","Fragment","pt","postDescription","postImgLg","postUser","postDate","container","item","xs","align","ml","alt","image","title","justify","generatePostJSX","sm","direction"],"mappings":"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","file":"static/js/8.bd56d7e7.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Notifier = () => {\r\n    const dispatch = useDispatch();\r\n    const notifications = useSelector(store => store.snackbar.notifications);\r\n    const onRemoveSnackbar = useCallback((key) => dispatch(actions.removeSnackbar(key)), [dispatch]);\r\n    const [displayed, setDisplayed] = useState([]);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const storeDisplayed = useCallback((id) => {\r\n        setDisplayed(displayed.concat(id));\r\n    }, [displayed]);\r\n\r\n    const removeDisplayed = useCallback((id) => {\r\n        setDisplayed(displayed.filter(key => id !== key));\r\n    }, [displayed]);\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key);\r\n                return;\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return;\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey);\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // remove this snackbar from redux store\r\n                    onRemoveSnackbar(myKey);\r\n                    removeDisplayed(myKey);\r\n                },\r\n            });\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key);\r\n        });\r\n    }, [\r\n        notifications,\r\n        closeSnackbar,\r\n        enqueueSnackbar,\r\n        dispatch,\r\n        displayed,\r\n        onRemoveSnackbar,\r\n        removeDisplayed,\r\n        storeDisplayed\r\n    ]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default Notifier;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    Box,\r\n    ButtonBase,\r\n    Card,\r\n    CardActionArea,\r\n    Container,\r\n    CardMedia,\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    spacing,\r\n} from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as actions from '../../../store/actions/index';\r\nimport Notifier from '../../Notifier/Notifier';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        flexGrow: 1.\r\n    },\r\n    postsContainer: {\r\n        paddingTop: theme.spacing(3)\r\n    },\r\n    postTitle: {\r\n        fontWeight: 800,\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    card: {\r\n        maxWidth: \"100%\"\r\n    },\r\n    media: {\r\n        height: 240\r\n    },\r\n    cardActions: {\r\n        display: \"flex\",\r\n        margin: \"0 10px\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    author: {\r\n        display: \"flex\"\r\n    },\r\n    paginationContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    resize: {\r\n        fontSize: 200\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\n// const onFetchPostDetail = useCallback(() => dispatch(actions.fetchPostDetail(postId)), [dispatch, postId]);\r\n\r\n// I need to pass in the parameters of fetchPostDetail simply the postData that\r\n// includes the postId and handle the\r\n\r\nconst Post = (props) => {\r\n    const { match } = props;\r\n    const { params } = match;\r\n    const { postId } = params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onFetchPostDetails = useCallback(() => dispatch(actions.fetchPostDetails(postId)), [dispatch, postId]);\r\n\r\n    const postData = useSelector(state => state.postDetails.postData);\r\n    const loading = useSelector(state => state.postDetails.loading);\r\n    console.log(\"PostData Fetched in the .jsx file: \");\r\n    console.log(postData);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        onFetchPostDetails();\r\n    }, [onFetchPostDetails]);\r\n\r\n    const generatePostDetailsSkeleton = () => {\r\n        return (\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <ButtonBase className={classes.image}>\r\n                            <Skeleton variant='rect' width={180} height={180} />\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm container>\r\n                        <Grid item xs container direction='column' spacing={2}>\r\n                            <Grid item xs>\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                                <Skeleton animation='wave' variant='text' />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton animation='wave' variant='circle' width={40} height={40} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    };\r\n\r\n    const generatePostJSX = () => {\r\n        const {\r\n            postDescription,\r\n            postImgLg,\r\n            postTitle,\r\n            postUser,\r\n            postDate,\r\n        } = postData;\r\n\r\n        return (\r\n            <Container>\r\n                <Paper>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Typography variant=\"h4\" align=\"center\" className={classes.postTitle}>\r\n                                {(postTitle) ? postTitle : \"[TÍTULO]\"}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Box ml={2}>\r\n                                <Typography variant=\"subtitle2\" component=\"p\">\r\n                                    Publicado por:\r\n                                        </Typography>\r\n                                <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\r\n                                    {(postUser) ? postUser : \"*INGRESE SESIÓN PARA MOSTRAR USUARIO*\"}\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Typography variant=\"subtitle2\" component=\"p\" style={{ textAlign: \"right\" }}>\r\n                                Fecha de publicación:\r\n                                        </Typography>\r\n                            <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\" style={{ textAlign: \"right\" }}>\r\n                                {postDate}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={8} >\r\n                            <Paper className={classes.paper}>\r\n                                <Card className={classes.card}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            image={(postImgLg) ? postImgLg : \"https://firebasestorage.googleapis.com/v0/b/condominio-santa-rita.appspot.com/o/images%2Fplaceholder-image.png?alt=media&token=fbecabf1-07c1-4a43-9b16-8e022730e11d\"}\r\n                                            title=\"Contemplative Reptile\"\r\n                                        />\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Grid container justify=\"center\">\r\n                                <Typography>\r\n                                    {postDescription}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </Container>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Notifier />\r\n            <Box pt={5}>\r\n                {!loading && postData && generatePostJSX()}\r\n                {loading && generatePostDetailsSkeleton()}\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Post;"],"sourceRoot":""}