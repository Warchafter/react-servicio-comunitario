{"version":3,"sources":["firebase/index.js","store/actions/auth.js","store/actions/posts.js","store/actions/postDetails.js","store/actions/postBuilder.js","store/actions/registerPayment.js","store/actions/snackbar.js","shared/utility.js","assets/images/condominio-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout.js","containers/Auth/Logout/Logout.js","App.js","store/reducers/auth.js","store/reducers/snackbar.js","store/reducers/posts.js","store/reducers/postBuilder.js","store/reducers/postDetails.js","store/sagas/auth.js","axios-db.js","store/sagas/posts.js","store/sagas/postBuilder.js","store/sagas/registerPayment.js","store/sagas/index.js","index.js","store/actions/actionTypes.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css"],"names":["firebase","initializeApp","storage","authStart","type","actionTypes","authSuccess","token","userId","idToken","authFail","error","authUserSignUp","email","name","password","authSignUpStart","authSignUpSuccess","payload","authSignUpFail","authUserLoadedSuccess","authUserLoadedFail","logout","logoutSucceed","checkAuthTimeout","expirationTime","auth","isSignup","authLoadUser","setAuthRedirectPath","path","authCheckState","fetchPosts","fetchPostsStart","fetchPostsSuccess","posts","fetchPostsFail","fetchPostDetails","postId","fetchPostDetailsStart","fetchPostDetailsSuccess","postData","fetchPostDetailsFailed","publishPost","publishPostStart","publishPostSuccess","id","publishPostFail","registerPayment","paymentData","registerPaymentStart","registerPaymentSuccess","registerPaymentFail","enqueueSnackbar","notification","key","options","updateObject","Date","getTime","Math","random","removeSnackbar","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","firstLetterHandler","user","charAt","toUpperCase","getFirst100Char","text","slice","getFirst40Char","formatDateCustomFunc","date","getMonth","String","getDate","padStart","getFullYear","getSnackbarData","message","variant","action","useStyles","makeStyles","theme","Logo","padding","height","boxSizing","borderRadius","props","classes","className","src","condominioLogo","alt","NavigationItem","ButtonBase","to","link","exact","activeClassName","active","children","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","NavigationItems","margin","listStyle","display","flexFlow","alignItems","withRouter","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","url","history","push","isAuthenticated","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","keepMounted","onClose","MenuItem","menuButton","marginRight","spacing","drawerToggle","width","justifyContent","cursor","DrawerToggle","edge","clicked","root","flexGrow","appBar","backgroundColor","logo","desktopOnly","ToolbarCustom","AppBar","position","Toolbar","drawerToggleClicked","isAuth","marginBottom","SideDrawer","Fragment","Drawer","anchor","closed","Content","connect","state","sideDrawerIsVisible","setSideDrawerIsVisible","dispatch","onLogout","actions","useEffect","Auth","React","lazy","PostBuilder","Posts","PostDetails","Payment","onTryAutoSignup","routes","render","component","Logout","fallback","initialState","localStorage","getItem","loading","authRedirectPath","authLogout","rememberMe","reducer","notifications","closeSnackbar","map","dismissAll","dismissed","filter","published","newPost","concat","fetchPostDetailsFail","logoutSaga","checkAuthTimeoutSaga","authUserSaga","authUserSignUpSaga","authLoadUserSaga","authCheckStateSaga","call","put","expDate","delay","authData","returnSecureToken","axios","post","response","data","expiresIn","expirationDate","setItem","localId","userData","username","queryParams","get","fetchedUsernames","correctUsername","forEach","element","console","log","instance","create","baseURL","baseApp","databaseURL","fetchPostsSaga","fetchPostDetailsSaga","access","fetchedPosts","correctPost","publishPostSaga","registerPaymentSaga","watchAuth","watchPosts","watchPayments","all","takeEvery","takeLatest","composeEnhancers","compose","rootReducer","combineReducers","authReducer","postsReducer","postBuilder","postBuilderReducer","postDetails","postDetailsReducer","snackbar","snackbarReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","createMuiTheme","palette","primary","main","secondary","green","status","danger","run","ReactDOM","maxSnack","StrictMode","ThemeProvider","CssBaseline","document","getElementById","AUTH_CHECK_STATE","AUTH_USER","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_USER_SIGNUP","AUTH_SIGNUP_START","AUTH_SIGNUP_SUCCESS","AUTH_SIGNUP_FAIL","AUTH_USER_LOADED_SUCCESS","AUTH_USER_LOADED_FAIL","AUTH_LOAD_USER","AUTH_INITIATE_LOGOUT","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","AUTH_CHECK_TIMEOUT","FETCH_POSTS","FETCH_POSTS_START","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAIL","FETCH_POST_DETAILS","FETCH_POST_DETAILS_START","FETCH_POST_DETAILS_SUCCESS","FETCH_POST_DETAILS_FAILED","DELETE_POST","DELETE_POST_START","DELETE_POST_SUCCESS","DELETE_POST_FAIL","PUBLISH_POST","PUBLISH_POST_START","PUBLISH_POST_SUCCESS","PUBLISH_POST_FAIL","REGISTER_PAYMENT","REGISTER_PAYMENT_START","REGISTER_PAYMENT_SUCCESS","REGISTER_PAYMENT_FAIL","ENQUEUE_SNACKBAR","CLOSE_SNACKBAR","REMOVE_SNACKBAR","module","exports"],"mappings":"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","file":"static/js/main.a589d157.chunk.js","sourcesContent":["// Copy and paste this into your JavaScript code to initialize the Firebase SDK.\r\n// You will also need to load the Firebase SDK.\r\n// See https://firebase.google.com/docs/web/setup for more details.\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport \"firebase/storage\";\r\n\r\nexport const baseApp = firebase.initializeApp({\r\n    \"projectId\": \"condominio-santa-rita\",\r\n    \"appId\": \"1:229131348214:web:6b52e65a0b7814a3ea64d7\",\r\n    \"databaseURL\": \"https://condominio-santa-rita-default-rtdb.firebaseio.com\",\r\n    \"storageBucket\": \"condominio-santa-rita.appspot.com\",\r\n    \"locationId\": \"us-central\",\r\n    \"apiKey\": \"AIzaSyCafYKuE-piSNlfpmmfw0tpXIc5ENbjEWw\",\r\n    \"authDomain\": \"condominio-santa-rita.firebaseapp.com\",\r\n    \"messagingSenderId\": \"229131348214\",\r\n    \"measurementId\": \"G-S3JGWN48R7\"\r\n});\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };","import * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const authUserSignUp = (email, name, password) => {\r\n    return {\r\n        type: actionTypes.AUTH_USER_SIGNUP,\r\n        email: email,\r\n        name: name,\r\n        password: password\r\n    };\r\n};\r\n\r\nexport const authSignUpStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_SIGNUP_START\r\n    };\r\n};\r\n\r\nexport const authSignUpSuccess = (payload) => {\r\n    return {\r\n        type: actionTypes.AUTH_SIGNUP_SUCCESS,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const authSignUpFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_SIGNUP_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const authUserLoadedSuccess = (payload) => {\r\n    return {\r\n        type: actionTypes.AUTH_USER_LOADED_SUCCESS,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const authUserLoadedFail = () => {\r\n    return {\r\n        type: actionTypes.AUTH_USER_LOADED_FAIL,\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_INITIATE_LOGOUT\r\n    };\r\n};\r\n\r\nexport const logoutSucceed = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\r\n        expirationTime: expirationTime\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return {\r\n        type: actionTypes.AUTH_USER,\r\n        email: email,\r\n        password: password\r\n    };\r\n};\r\n\r\nexport const authLoadUser = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOAD_USER\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_STATE\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchPosts = () => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS\r\n    };\r\n};\r\n\r\nexport const fetchPostsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_START\r\n    };\r\n};\r\n\r\nexport const fetchPostsSuccess = (posts) => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_SUCCESS,\r\n        posts: posts\r\n    };\r\n};\r\n\r\nexport const fetchPostsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: actionTypes.DELETE_POST,\r\n        postId: postId\r\n    };\r\n};\r\n\r\nexport const deletePostStart = () => {\r\n    return {\r\n        type: actionTypes.DELETE_POST_START\r\n    };\r\n};\r\n\r\nexport const deletePostSuccess = (postId) => {\r\n    return {\r\n        type: actionTypes.DELETE_POST_SUCCESS,\r\n        postId: postId\r\n    };\r\n};\r\n\r\nexport const deletePostFail = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_POST_FAIL,\r\n        error: error\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchPostDetails = (postId) => {\r\n    return {\r\n        type: actionTypes.FETCH_POST_DETAILS,\r\n        postId: postId\r\n    };\r\n};\r\n\r\nexport const fetchPostDetailsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_POST_DETAILS_START\r\n    };\r\n};\r\n\r\nexport const fetchPostDetailsSuccess = (postData) => {\r\n    return {\r\n        type: actionTypes.FETCH_POST_DETAILS_SUCCESS,\r\n        postData: postData\r\n    };\r\n};\r\n\r\nexport const fetchPostDetailsFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_POST_DETAILS_FAILED,\r\n        error: error\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const publishPost = (postData, token) => {\r\n    return {\r\n        type: actionTypes.PUBLISH_POST,\r\n        postData: postData,\r\n        token: token\r\n    };\r\n};\r\n\r\nexport const publishPostStart = () => {\r\n    return {\r\n        type: actionTypes.PUBLISH_POST_START\r\n    };\r\n};\r\n\r\nexport const publishPostSuccess = (id, postData) => {\r\n    return {\r\n        type: actionTypes.PUBLISH_POST_SUCCESS,\r\n        postId: id,\r\n        postData: postData\r\n    };\r\n};\r\n\r\nexport const publishPostFail = (error) => {\r\n    return {\r\n        type: actionTypes.PUBLISH_POST_FAIL,\r\n        error: error\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const registerPayment = (paymentData, token) => {\r\n    return {\r\n        type: actionTypes.REGISTER_PAYMENT,\r\n        paymentData: paymentData,\r\n        token: token\r\n    };\r\n};\r\n\r\nexport const registerPaymentStart = () => {\r\n    return {\r\n        type: actionTypes.REGISTER_PAYMENT_START\r\n    };\r\n};\r\n\r\nexport const registerPaymentSuccess = (id, paymentData) => {\r\n    return {\r\n        type: actionTypes.REGISTER_PAYMENT_SUCCESS,\r\n        postId: id,\r\n        paymentData: paymentData\r\n    };\r\n};\r\n\r\nexport const registerPaymentFail = (error) => {\r\n    return {\r\n        type: actionTypes.REGISTER_PAYMENT_FAIL,\r\n        error: error\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nexport const enqueueSnackbar = (notification) => {\r\n    const key = notification.options && notification.options.key;\r\n\r\n    return {\r\n        type: actionTypes.ENQUEUE_SNACKBAR,\r\n        notification: updateObject(notification, {\r\n            key: key || new Date().getTime() + Math.random()\r\n        }),\r\n    };\r\n};\r\n\r\nexport const closeSnackbar = key => ({\r\n    type: actionTypes.CLOSE_SNACKBAR,\r\n    dismissAll: !key, // dismiss all if no key has been defined\r\n    key: key,\r\n});\r\n\r\nexport const removeSnackbar = key => ({\r\n    type: actionTypes.REMOVE_SNACKBAR,\r\n    key: key,\r\n});","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n};\r\n\r\nexport const firstLetterHandler = user => {\r\n    return (user) ? user.charAt(0).toUpperCase() : null;\r\n}\r\n\r\nexport const toFirstCharUppercase = name => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n};\r\n\r\nexport const getFirst100Char = text => {\r\n    return (text) ? (((text).length < 100) ? text : text.slice(0, 95) + \"...\") : null;\r\n}\r\n\r\nexport const getFirst40Char = text => {\r\n    return (text) ? (((text).length < 40) ? text : text.slice(0, 37) + \"...\") : null;\r\n}\r\n\r\nexport const formatDateCustomFunc = date => {\r\n    let monthNames = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\r\n        \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\r\n    let month = monthNames[date.getMonth()];\r\n    let day = String(date.getDate()).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n    let newDate = month + '\\n' + day + ', ' + year\r\n    return newDate;\r\n};\r\n\r\nexport const getSnackbarData = (message, variant) => {\r\n    return {\r\n        message: message,\r\n        options: {\r\n            key: new Date().getTime() + Math.random(),\r\n            variant: variant,\r\n            action: null,\r\n        },\r\n    };\r\n};","export default __webpack_public_path__ + \"static/media/condominio-logo.80ced111.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport condominioLogo from '../../assets/images/condominio-logo.png';\n\nconst useStyles = makeStyles(theme => ({\n    Logo: {\n        padding: \"8px\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        borderRadius: \"5px\",\n        \"& img\": {\n            height: \"50px\"\n        }\n    }\n}));\n\nconst Logo = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.Logo} >\n            <img src={condominioLogo} alt=\"Condominio_Santa_Rita\" />\n        </div>\n    );\n};\n\n\nexport default Logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ButtonBase } from '@material-ui/core';\n\nimport classes from './NavigationItem.module.css';\n\nconst NavigationItem = (props) => {\n\n    return (\n        <ButtonBase>\n            <li className={classes.NavigationItem}>\n                <NavLink\n                    to={props.link}\n                    exact={props.exact}\n                    activeClassName={classes.active}>{props.children}</NavLink>\n            </li>\n        </ButtonBase>\n    );\n};\n\nexport default NavigationItem;","import React, { useState } from 'react';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n    },\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        {...props}\n    />\n));\n\nconst useStyles = makeStyles(theme => ({\n    NavigationItems: {\n        margin: 0,\n        padding: 0,\n        listStyle: \"none\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"center\",\n        height: \"100%\"\n    },\n    \"@media (min-width: 500px)\": {\n        NavigationItems: {\n            flexFlow: \"row\"\n        }\n    }\n}));\n\nconst NavigationItems = (props) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const classes = useStyles();\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (url) => {\n        setAnchorEl(null);\n        url && props.history.push(url);\n    }\n\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/posts\">Inicio</NavigationItem>\n            {props.isAuthenticated ? <NavigationItem link=\"/post-builder\">Crear Publicación</NavigationItem> : null}\n            <div>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    variant=\"contained\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <StyledMenu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                >\n                    {!props.isAuthenticated ?\n                        <MenuItem onClick={() => handleClose(\"/auth\")}>Iniciar Sesión</MenuItem> :\n                        <MenuItem onClick={() => handleClose(\"/logout\")}>Cerrar Sesión</MenuItem>}\n                </StyledMenu>\n            </div>\n        </ul>\n    )\n\n};\n\nexport default withRouter(NavigationItems);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    drawerToggle: {\n        width: \"40px\",\n        height: \"100%\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n        padding: \"10px 0\",\n        boxSizing: \"border-box\",\n        cursor: \"pointer\"\n    },\n    \"@media (min-width: 500px)\": {\n        drawerToggle: {\n            display: \"none\"\n        }\n    }\n}));\n\nconst DrawerToggle = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.drawerToggle}>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={props.clicked}>\n                <MenuIcon />\n            </IconButton>\n        </div>\n\n    )\n};\n\nexport default DrawerToggle;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    appBar: {\n        backgroundColor: \"#29a657\",\n        padding: \"0 20px\",\n        height: '80%'\n    },\n    logo: {\n        height: \"80%\",\n        flexGrow: 1,\n    },\n    \"@media (max-width: 499px)\": {\n        desktopOnly: {\n            display: \"none\",\n        }\n    }\n}));\n\nconst ToolbarCustom = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <DrawerToggle clicked={props.drawerToggleClicked} />\n                    <div className={classes.logo}>\n                        <Logo />\n                    </div>\n                    <nav className={classes.desktopOnly}>\n                        <NavigationItems isAuthenticated={props.isAuth} />\n                    </nav>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default ToolbarCustom;","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nconst useStyles = makeStyles(theme => ({\n    Logo: {\n        height: \"11%\",\n        marginBottom: \"32px\",\n    }\n}));\n\nconst SideDrawer = (props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Drawer anchor=\"left\" open={props.open} onClose={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </Drawer>\n        </React.Fragment>\n    );\n};\n\nexport default SideDrawer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Toolbar from '../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../components/Navigation/SideDrawer/SideDrawer';\n\nconst useStyles = makeStyles(theme => ({\n    Content: {\n        margin: 0\n    }\n}));\n\nconst Layout = props => {\n    const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\n\n    const classes = useStyles();\n\n    const sideDrawerCloseHandler = () => {\n        setSideDrawerIsVisible(false);\n    }\n\n    const sideDrawerToggleHandler = () => {\n        setSideDrawerIsVisible(!sideDrawerIsVisible);\n    }\n\n    return (\n        <React.Fragment>\n            <Toolbar\n                isAuth={props.isAuthenticated}\n                drawerToggleClicked={sideDrawerToggleHandler} />\n            <SideDrawer\n                isAuth={props.isAuthenticated}\n                open={sideDrawerIsVisible}\n                closed={sideDrawerCloseHandler}\n            />\n            <main className={classes.Content}>{props.children}</main>\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n}\n\nexport default connect(mapStateToProps)(Layout);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst Logout = props => {\r\n    const { onLogout } = props;\r\n\r\n    useEffect(() => {\r\n        onLogout();\r\n    }, [onLogout]);\r\n\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useEffect, Suspense } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nconst Auth = React.lazy(() => {\n  return import('./containers/Auth/Auth');\n});\n\nconst PostBuilder = React.lazy(() => {\n  return import('./components/Posts/PostBuilder/PostBuilder');\n});\n\nconst Posts = React.lazy(() => {\n  return import('./containers/Posts/Posts');\n});\n\nconst PostDetails = React.lazy(() => {\n  return import('./components/Posts/PostDetail/PostDetail');\n});\n\nconst Payment = React.lazy(() => {\n  return import('./containers/Payment/Payment');\n});\n\n\nconst App = props => {\n  const { onTryAutoSignup } = props;\n\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" render={(props) => <Auth {...props} />} />\n      <Redirect to=\"/auth\" />\n    </Switch>\n  );\n\n  if (props.isAuth) {\n    routes = (\n      <Switch>\n        <Route path=\"/posts/:postId\" render={(props) => <PostDetails {...props} />} />\n        <Route path=\"/post-builder\" render={(props) => <PostBuilder {...props} />} />\n        <Route path=\"/register-payment\" render={(props) => <Payment {...props} />} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" render={(props) => <Auth {...props} />} />\n        <Route path=\"/posts\" component={Posts} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  }\n\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={<p>Loading...</p>}>\n          {routes}\n        </Suspense>\n      </Layout>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    userId: localStorage.getItem('localId'),\r\n    user: localStorage.getItem('name'),\r\n    isAuthenticated: false,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/posts'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        isAuthenticated: true,\r\n        error: null,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        isAuthenticated: false,\r\n        error: action.error,\r\n        loading: false,\r\n        user: null\r\n    });\r\n};\r\n\r\nconst authSignUpStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSignUpSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        user: action.payload,\r\n        error: null,\r\n        loading: false,\r\n        token: null,\r\n        isAuthenticated: false\r\n    })\r\n}\r\n\r\nconst authSignUpFail = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        isAuthenticated: false,\r\n        error: action.error,\r\n        loading: false,\r\n        user: null\r\n    })\r\n}\r\n\r\nconst authUserLoadedSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        user: action.payload\r\n    });\r\n};\r\n\r\nconst authUserLoadedFail = (state, action) => {\r\n    return updateObject(state, {\r\n        user: null\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        isAuthenticated: false,\r\n        userId: null,\r\n        user: null,\r\n        rememberMe: false\r\n    });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_SIGNUP_START: return authSignUpStart(state, action);\r\n        case actionTypes.AUTH_SIGNUP_SUCCESS: return authSignUpSuccess(state, action);\r\n        case actionTypes.AUTH_SIGNUP_FAIL: return authSignUpFail(state, action);\r\n        case actionTypes.AUTH_USER_LOADED_SUCCESS: return authUserLoadedSuccess(state, action);\r\n        case actionTypes.AUTH_USER_LOADED_FAIL: return authUserLoadedFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    notifications: [],\r\n};\r\n\r\nconst enqueueSnackbar = (state, action) => {\r\n    return {\r\n        ...state,\r\n        notifications: [\r\n            ...state.notifications,\r\n            {\r\n                key: action.key,\r\n                ...action.notification,\r\n            },\r\n        ],\r\n    };\r\n};\r\n\r\nconst closeSnackbar = (state, action) => {\r\n    return {\r\n        ...state,\r\n        notifications: state.notifications.map(notification => (\r\n            (action.dismissAll || notification.key === action.key)\r\n                ? { ...notification, dismissed: true }\r\n                : { ...notification }\r\n        )),\r\n    };\r\n};\r\n\r\nconst removeSnackbar = (state, action) => {\r\n    return {\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n            notification => notification.key !== action.key,\r\n        ),\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ENQUEUE_SNACKBAR: return enqueueSnackbar(state, action);\r\n        case actionTypes.CLOSE_SNACKBAR: return closeSnackbar(state, action);\r\n        case actionTypes.REMOVE_SNACKBAR: return removeSnackbar(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst fetchPostsStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst fetchPostsSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        posts: action.posts,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchPostsFail = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_POSTS_START: return fetchPostsStart(state, action);\r\n        case actionTypes.FETCH_POSTS_SUCCESS: return fetchPostsSuccess(state, action);\r\n        case actionTypes.FETCH_POSTS_FAIL: return fetchPostsFail(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    loading: false,\r\n    published: false\r\n};\r\n\r\nconst publishPostStart = (state, action) => {\r\n    return updateObject(state, { loading: true, published: false });\r\n};\r\n\r\nconst publishPostSuccess = (state, action) => {\r\n    const newPost = updateObject(action.postData, { id: action.postId });\r\n    return updateObject(state, {\r\n        loading: false,\r\n        posts: state.posts.concat(newPost),\r\n        published: true\r\n    });\r\n};\r\n\r\nconst publishPostFail = (state, action) => {\r\n    return updateObject(state, { loading: false, published: false });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PUBLISH_POST_START: return publishPostStart(state, action);\r\n        case actionTypes.PUBLISH_POST_SUCCESS: return publishPostSuccess(state, action);\r\n        case actionTypes.PUBLISH_POST_FAIL: return publishPostFail(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    postData: null,\r\n    error: null,\r\n    loading: false,\r\n    postId: null,\r\n};\r\n\r\nconst fetchPostDetailsStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true, postId: action.postId });\r\n};\r\n\r\nconst fetchPostDetailsSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        postData: action.postData,\r\n        error: null,\r\n        loading: false,\r\n        postId: null\r\n    });\r\n};\r\n\r\nconst fetchPostDetailsFail = (state, action) => {\r\n    return updateObject(state, { error: action.error, loading: false, postId: null });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_POST_DETAILS_START: return fetchPostDetailsStart(state, action);\r\n        case actionTypes.FETCH_POST_DETAILS_SUCCESS: return fetchPostDetailsSuccess(state, action);\r\n        case actionTypes.FETCH_POST_DETAILS_FAILED: return fetchPostDetailsFail(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { put, delay, call } from 'redux-saga/effects';\r\n\r\nimport axios from 'axios';\r\nimport * as actions from '../actions/index';\r\nimport { getSnackbarData } from '../../shared/utility';\r\n\r\n\r\nexport function* logoutSaga(action) {\r\n    yield call([localStorage, 'removeItem'], \"token\");\r\n    yield call([localStorage, 'removeItem'], \"userId\");\r\n    yield call([localStorage, 'removeItem'], \"name\");\r\n    yield call([localStorage, 'removeItem'], \"expirationDate\");\r\n    yield put(actions.logoutSucceed());\r\n};\r\n\r\nexport function* checkAuthTimeoutSaga(action) {\r\n    let expDate = action.expirationTime * 1000\r\n\r\n    yield delay(expDate);\r\n    yield put(actions.logout());\r\n}\r\n\r\nexport function* authUserSaga(action) {\r\n    yield put(actions.authStart());\r\n    const authData = {\r\n        email: action.email,\r\n        password: action.password,\r\n        returnSecureToken: true\r\n    };\r\n    const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCafYKuE-piSNlfpmmfw0tpXIc5ENbjEWw';\r\n    try {\r\n        const response = yield axios.post(url, authData)\r\n\r\n        const expirationDate = yield new Date(\r\n            new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        yield localStorage.setItem('token', response.data.idToken);\r\n        yield localStorage.setItem('expirationDate', expirationDate)\r\n        yield localStorage.setItem('userId', response.data.localId);\r\n        yield put(actions.authSuccess(response.data.idToken, response.data.localId));\r\n        yield put(actions.authLoadUser());\r\n        yield put(actions.checkAuthTimeout(response.data.expiresIn));\r\n    } catch (error) {\r\n        yield put(actions.logout());\r\n        yield put(actions.enqueueSnackbar(getSnackbarData(error.response.data.error.message, 'error')));\r\n        yield put(actions.authFail(error.response.data.error));\r\n    };\r\n}\r\n\r\n// if (!action.isSignup) {\r\n//     url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCafYKuE-piSNlfpmmfw0tpXIc5ENbjEWw';\r\n// }\r\n\r\nexport function* authUserSignUpSaga(action) {\r\n    yield put(actions.authSignUpStart());\r\n    const authData = {\r\n        email: action.email,\r\n        password: action.password,\r\n        returnSecureToken: true\r\n    };\r\n    const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCafYKuE-piSNlfpmmfw0tpXIc5ENbjEWw';\r\n    try {\r\n        let response = yield axios.post(url, authData)\r\n        yield localStorage.setItem('token', response.data.idToken);\r\n        yield localStorage.setItem('userId', response.data.localId);\r\n        const userData = {\r\n            username: action.name,\r\n            userId: response.data.localId\r\n        }\r\n        response = yield axios.post('https://condominio-santa-rita-default-rtdb.firebaseio.com/usersCustomUsername.json?auth=' + response.data.idToken, userData)\r\n        yield call([localStorage, 'removeItem'], \"token\");\r\n        yield call([localStorage, 'removeItem'], \"userId\");\r\n        yield put(actions.authSignUpSuccess(response.data));\r\n        yield put(actions.enqueueSnackbar(getSnackbarData('¡Cuenta creada! Ahora inicie sesión.', 'success')));\r\n    } catch (error) {\r\n        yield put(actions.logout());\r\n        yield put(actions.enqueueSnackbar(getSnackbarData(error.response.data.error.message, 'error')))\r\n        yield put(actions.authSignUpFail(error.response.data.error))\r\n    };\r\n};\r\n\r\nexport function* authLoadUserSaga(action) {\r\n    const token = yield localStorage.getItem('token');\r\n    if (!token) {\r\n        yield put(actions.logout());\r\n        yield put(actions.authUserLoadedFail());\r\n    } else {\r\n        const expirationDate = yield new Date(localStorage.getItem('expirationDate'));\r\n        if (expirationDate <= new Date()) {\r\n            yield put(actions.logout());\r\n        } else {\r\n            try {\r\n                const userId = yield localStorage.getItem('userId');\r\n                const queryParams = yield '?auth=' + token;\r\n                const url = 'https://condominio-santa-rita-default-rtdb.firebaseio.com/usersCustomUsername.json';\r\n                const response = yield call(axios.get, [(url + queryParams)]);\r\n                const fetchedUsernames = [];\r\n                for (let key in response.data) {\r\n                    fetchedUsernames.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                let correctUsername = \"\";\r\n                fetchedUsernames.forEach((element) => {\r\n                    if (element.userId === userId) {\r\n                        correctUsername = element.username\r\n                    }\r\n                });\r\n                yield localStorage.setItem('name', correctUsername);\r\n                yield put(actions.authUserLoadedSuccess(correctUsername));\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function* authCheckStateSaga(action) {\r\n    const token = yield localStorage.getItem('token');\r\n    if (!token) {\r\n        yield put(actions.logout());\r\n    } else {\r\n        const expirationDate = yield new Date(localStorage.getItem('expirationDate'));\r\n        if (expirationDate <= new Date()) {\r\n            yield put(actions.logout());\r\n        } else {\r\n            const userId = localStorage.getItem('userId');\r\n            yield put(actions.authSuccess(token, userId));\r\n            let expDate = (expirationDate.getTime() - new Date().getTime()) / 1000\r\n            yield put(actions.checkAuthTimeout(expDate));\r\n        }\r\n    }\r\n}","import axios from 'axios';\nimport baseApp from './firebase/index';\n\nconst instance = axios.create({\n    baseURL: baseApp.databaseURL\n});\n\nexport default instance;","import { element } from 'prop-types';\r\nimport { put } from 'redux-saga/effects';\r\nimport axios from '../../axios-db';\r\n\r\nimport { getSnackbarData } from '../../shared/utility';\r\nimport * as actions from '../actions/index';\r\n\r\nexport function* fetchPostsSaga(action) {\r\n    yield put(actions.fetchPostsStart());\r\n    const access = yield localStorage.getItem('token');\r\n    const queryParams = yield '?auth=' + access;\r\n    const url = 'https://condominio-santa-rita-default-rtdb.firebaseio.com/posts.json';\r\n    try {\r\n        const response = yield axios.get(url + queryParams); // Esta manera está piche para la solicitud\r\n        // const response = yield call(axios.get, [(url + queryParams)]);\r\n        const fetchedPosts = [];\r\n        for (let key in response.data) {\r\n            fetchedPosts.push({\r\n                ...response.data[key],\r\n                id: key\r\n            });\r\n        }\r\n        yield put(actions.fetchPostsSuccess(fetchedPosts));\r\n        // const response = yield call(axios.get, [(url)]);\r\n    } catch (error) {\r\n        yield put(actions.fetchPostsFail(error));\r\n        yield put(actions.enqueueSnackbar(getSnackbarData('No pudimos obtener el listado de Publicaciones', 'error')));\r\n    };\r\n};\r\n\r\nexport function* fetchPostDetailsSaga(action) {\r\n    yield put(actions.fetchPostDetailsStart());\r\n    const access = yield localStorage.getItem('token');\r\n    // const queryParams = yield '?auth=' + access + '&orderBy=\"postId\"&equalTo=\"' + action.postId + '\"';\r\n    const queryParams = yield '?auth=' + access;\r\n    const url = 'https://condominio-santa-rita-default-rtdb.firebaseio.com/posts.json';\r\n    try {\r\n        const response = yield axios.get(url + queryParams);\r\n        const fetchedPosts = [];\r\n        for (let key in response.data) {\r\n            fetchedPosts.push({\r\n                ...response.data[key],\r\n                id: key\r\n            });\r\n        }\r\n        let correctPost = null;\r\n        fetchedPosts.forEach((element) => {\r\n            if (element.postId === action.postId) {\r\n                correctPost = element\r\n            }\r\n        });\r\n        console.log(response.data);\r\n        console.log(correctPost);\r\n        yield put(actions.fetchPostDetailsSuccess(correctPost));\r\n    } catch (error) {\r\n        yield put(actions.fetchPostDetailsFailed(error));\r\n        console.log(error);\r\n        yield put(actions.enqueueSnackbar(getSnackbarData('No pudimos obtener la publicación.', 'error')));\r\n    };\r\n};","import { put } from '@redux-saga/core/effects';\r\nimport axios from '../../axios-db';\r\n\r\nimport { getSnackbarData } from '../../shared/utility';\r\nimport * as actions from '../actions/index';\r\n\r\n// publishing post stept:\r\n// after post request with postData (that has userId which is the localId)\r\n// we get the response.data which has a .name property\r\n// that name is the id for the registry of the post published in the DB\r\n// so we dispatch publishPostSuccess(response.data.name, action.postData)\r\n// publishPostSuccess in action.js recieves (id, postData) and then returns\r\n// type:type: actionTypes.PUBLISH_POST_SUCCESS,\r\n// postId: id,\r\n// postData: postData\r\n\r\nexport function* publishPostSaga(action) {\r\n    try {\r\n        yield put(actions.publishPostStart());\r\n        const response = yield axios.post('https://condominio-santa-rita-default-rtdb.firebaseio.com/posts.json?auth=' + action.token, action.postData);\r\n        yield put(actions.publishPostSuccess(response.data.name, action.postData));\r\n        yield put(actions.enqueueSnackbar(getSnackbarData('¡Se guardó la publicación!', 'success')));\r\n    } catch (error) {\r\n        yield put(actions.publishPostFail(error));\r\n        yield put(actions.enqueueSnackbar(getSnackbarData('No se pudo guardar la publicación', 'error')));\r\n    }\r\n}","import { put } from '@redux-saga/core/effects';\r\nimport axios from '../../axios-db';\r\n\r\nimport { getSnackbarData } from '../../shared/utility';\r\nimport * as actions from '../actions/index';\r\n\r\nexport function* registerPaymentSaga(action) {\r\n    try {\r\n        yield put(actions.registerPaymentStart());\r\n        const response = yield axios.post('https://condominio-santa-rita-default-rtdb.firebaseio.com/payments.json?auth=' + action.token, action.postData);\r\n        yield put(actions.registerPaymentSuccess(response.data.name, action.postData));\r\n        yield put(actions.enqueueSnackbar(getSnackbarData('¡Se guardó la publicación!', 'success')));\r\n    } catch (error) {\r\n        yield put(actions.registerPaymentFail(error));\r\n        yield put(actions.enqueueSnackbar(getSnackbarData('No se pudo guardar la publicación', 'error')));\r\n    }\r\n}","import { takeEvery, all, takeLatest } from 'redux-saga/effects';\r\n\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport {\r\n    checkAuthTimeoutSaga,\r\n    logoutSaga,\r\n    authUserSaga,\r\n    authLoadUserSaga,\r\n    authUserSignUpSaga,\r\n    authCheckStateSaga\r\n} from './auth';\r\n\r\nimport {\r\n    fetchPostDetailsSaga,\r\n    fetchPostsSaga,\r\n} from './posts';\r\n\r\nimport {\r\n    publishPostSaga,\r\n} from './postBuilder';\r\n\r\nimport {\r\n    registerPaymentSaga\r\n} from './registerPayment';\r\n\r\nexport function* watchAuth() {\r\n    yield all([\r\n        takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga),\r\n        takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, logoutSaga),\r\n        takeEvery(actionTypes.AUTH_USER, authUserSaga),\r\n        takeEvery(actionTypes.AUTH_USER_SIGNUP, authUserSignUpSaga),\r\n        takeEvery(actionTypes.AUTH_LOAD_USER, authLoadUserSaga),\r\n        takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga),\r\n    ]);\r\n};\r\n\r\nexport function* watchPosts() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_POST_DETAILS, fetchPostDetailsSaga),\r\n        takeEvery(actionTypes.FETCH_POSTS, fetchPostsSaga),\r\n        takeLatest(actionTypes.PUBLISH_POST, publishPostSaga),\r\n    ]);\r\n};\r\n\r\nexport function* watchPayments() {\r\n    yield all([\r\n        takeLatest(actionTypes.REGISTER_PAYMENT, registerPaymentSaga),\r\n    ]);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { SnackbarProvider } from 'notistack';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport App from './App';\nimport authReducer from './store/reducers/auth';\nimport snackbarReducer from './store/reducers/snackbar';\nimport postsReducer from './store/reducers/posts';\nimport postBuilderReducer from './store/reducers/postBuilder';\nimport postDetailsReducer from './store/reducers/postDetails';\nimport { watchAuth, watchPosts, watchPayments } from './store/sagas';\nimport { green } from '@material-ui/core/colors';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    posts: postsReducer,\n    postBuilder: postBuilderReducer,\n    postDetails: postDetailsReducer,\n    snackbar: snackbarReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n));\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#87e0ff\"\n        },\n        secondary: green,\n        type: \"dark\",\n    },\n    status: {\n        danger: 'orange',\n    },\n});\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchPosts);\nsagaMiddleware.run(watchPayments);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SnackbarProvider maxSnack={3}>\n            <BrowserRouter>\n                <React.StrictMode>\n                    <ThemeProvider theme={theme}>\n                        <CssBaseline />\n                        <App />\n                    </ThemeProvider>\n                </React.StrictMode>\n            </BrowserRouter>\n        </SnackbarProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// ReactDOM.render(app, document.getElementById('root'));\n// registerServiceWorker();\n\n","// Authentication actions\r\n\r\nexport const AUTH_CHECK_STATE = 'AUTH_CHECK_STATE';\r\nexport const AUTH_USER = 'AUTH_USER';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_USER_SIGNUP = 'AUTH_USER_SIGNUP';\r\nexport const AUTH_SIGNUP_START = 'AUTH_SIGNUP_START';\r\nexport const AUTH_SIGNUP_SUCCESS = 'AUTH_SIGNUP_SUCCESS';\r\nexport const AUTH_SIGNUP_FAIL = 'AUTH_SIGNUP_FAIL';\r\nexport const AUTH_USER_LOADED_SUCCESS = 'AUTH_USER_LOADED_SUCCESS';\r\nexport const AUTH_USER_LOADED_FAIL = 'AUTH_USER_LOADED_FAIL';\r\nexport const AUTH_LOAD_USER = 'AUTH_LOAD_USER';\r\nexport const AUTH_INITIATE_LOGOUT = 'AUTH_INITIATE_LOGOUT';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\r\n\r\n// Posts actions\r\n\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const FETCH_POSTS_START = 'FETCH_POSTS_START';\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\r\nexport const FETCH_POSTS_FAIL = 'FETCH_POSTS_FAIL';\r\nexport const FETCH_POST_DETAILS = 'FETCH_POST_DETAILS';\r\nexport const FETCH_POST_DETAILS_START = 'FETCH_POST_DETAILS_START';\r\nexport const FETCH_POST_DETAILS_SUCCESS = 'FETCH_POST_DETAILS_SUCCESS';\r\nexport const FETCH_POST_DETAILS_FAILED = 'FETCH_POST_DETAILS_FAILED';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const DELETE_POST_START = 'DELETE_POST_START';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAIL = 'DELETE_POST_FAIL';\r\nexport const PUBLISH_POST = 'PUBLISH_POST';\r\nexport const PUBLISH_POST_START = 'PUBLISH_POST_START';\r\nexport const PUBLISH_POST_SUCCESS = 'PUBLISH_POST_SUCCESS';\r\nexport const PUBLISH_POST_FAIL = 'PUBLISH_POST_FAIL';\r\nexport const PUBLISH_POST_INIT = 'PUBLISH_POST_INIT';\r\n\r\n// Payment actions\r\n\r\nexport const REGISTER_PAYMENT = 'REGISTER_PAYMENT';\r\nexport const REGISTER_PAYMENT_START = 'REGISTER_PAYMENT_START';\r\nexport const REGISTER_PAYMENT_SUCCESS = 'REGISTER_PAYMENT_SUCCESS';\r\nexport const REGISTER_PAYMENT_FAIL = 'REGISTER_PAYMENT_FAIL';\r\n\r\n// Snackbar actions\r\n\r\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2bSez\",\"active\":\"NavigationItem_active__8H2FP\"};"],"sourceRoot":""}